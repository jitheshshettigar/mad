
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout 
xmlns:android="http://schemas.android.com/apk/res/android"
xmlns:app="http://schemas.android.com/apk/res-auto"
xmlns:tools="http://schemas.android.com/tools" 
android:layout_width="match_parent" 
android:layout_height="match_parent" 
tools:context=".MainActivity">
<TextView 
android:id="@+id/counterValue" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:hint="Counter Value" 
android:textSize="40dp" 
android:gravity="center"
app:layout_constraintBottom_toBottomOf="parent"
app:layout_constraintEnd_toEndOf="parent" 
app:layout_constraintHorizontal_bias="0.498" 
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toTopOf="parent" 
app:layout_constraintVertical_bias="0.334" />
<Button 
android:id="@+id/startBtn" 
android:layout_width="wrap_content"
android:layout_height="wrap_content" 
android:text="Start" 
app:layout_constraintBottom_toBottomOf="parent" 
app:layout_constraintEnd_toEndOf="parent" 
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toTopOf="parent" 
app:layout_constraintVertical_bias="0.645" />
<Button 
android:id="@+id/stopBtn" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:text="Stop" 
app:layout_constraintBottom_toBottomOf="parent" 
app:layout_constraintEnd_toEndOf="parent" 
app:layout_constraintStart_toStartOf="parent" 
app:layout_constraintTop_toTopOf="parent" 
app:layout_constraintVertical_bias="0.781" />
<Switch 
android:id="@+id/switch1" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginBottom="62dp" 
android:layout_marginEnd="177dp" 
android:layout_marginLeft="146dp" 
android:layout_marginRight="177dp" 
android:layout_marginStart="146dp" 
android:layout_marginTop="95dp" android:text="Switch" 
app:layout_constraintBottom_toTopOf="@+id/startBtn" 
app:layout_constraintEnd_toEndOf="parent" 
app:layout_constraintStart_toStartOf="parent"
app:layout_constraintTop_toBottomOf="@+id/counterValue" />
<TextView 
android:id="@+id/textView2" 
android:layout_width="wrap_content" 
android:layout_height="wrap_content" 
android:layout_marginBottom="96dp" 
android:layout_marginEnd="61dp" 
android:layout_marginLeft="85dp" 
android:layout_marginRight="61dp" 
android:layout_marginStart="85dp" 
android:layout_marginTop="102dp" 
android:text="Counter Application" 
android:textSize="30dp"
app:layout_constraintBottom_toTopOf="@+id/counterValue"
app:layout_constraintEnd_toEndOf="parent" 
app:layout_constraintStart_toStartOf="parent"
 app:layout_constraintTop_toTopOf="parent" />
</androidx.constraintlayout.widget.ConstraintLayout>
MainActivity.java
package com.example.counter;
import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle; 
import android.os.Handler; 
import android.util.Log; 
import android.view.View; 
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
public class MainActivity extends AppCompatActivity { 
private static final String TAG = "thread"; 
Handler mainHandler = new Handler();
int count=0;
boolean running = false; 
Button startBtn,stopBtn;
TextView counterVal;
void startThread(){
NewThread nObj = new NewThread();
nObj.start();
}
@Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
counterVal = findViewById(R.id.counterValue);
startBtn = findViewById(R.id.startBtn);
stopBtn = findViewById(R.id.stopBtn);
startBtn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
count=0;
running=true;
startThread();
}
});
stopBtn.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v) {
}
});
running=false;
}
class NewThread extends Thread{
@Override
public void run() {
while(running){
count++;
mainHandler.post(new Runnable() {
@Override
public void run() {
counterVal.setText(String.valueOf(count));
}
});
try { Thread.sleep(1000);
} catch (InterruptedException e) {
e.printStackTrace();
}
}
}
}
}
